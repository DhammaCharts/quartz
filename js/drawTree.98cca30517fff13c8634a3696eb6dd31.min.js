async function drawTree(n){const{content:s}=await fetchData,e=[];for(let a in s){const r=s[a],c=r.title,o=a.split("/");let i=o.pop();i==''&&(i="_ROOT_");let t=o.slice(-1)[0];t==''&&i=="_ROOT_"&&(t="SUPER-ROOT"),t==''&&(t="ROOT"),t="_"+t+"_",e.push({id:i,parentId:t,name:c,type:"page",href:n.slice(0,n.length-1)+a}),o.forEach((n,s)=>{let t=o[s-1];t==''?t="_ROOT_":t="_"+t+"_";const i={id:"_"+n+"_",parentId:t,name:n.replace(/-/g," "),type:"folder",level:s};n!=''&&!e.some(e=>JSON.stringify(e)===JSON.stringify(i))&&e.push(i)})}let o;const r=e.reduce((e,t,n)=>(e[t.id]=n,e),{});e.forEach(t=>{if(t.parentId=="_SUPER-ROOT_"){o=t;return}const n=e[r[t.parentId]];n.children=[...n.children||[],t]});const i=o.children;function*a(e,n=[]){for(var t in e){const s=n.concat(t);yield[t,e[t],s,e],e[t]!==null&&typeof e[t]=="object"&&(yield*a(e[t],s))}}for(var[c,t,l]of a(i)){let e=document.getElementById("tree").innerHTML;t?.type=="folder"&&(document.getElementById("tree").innerHTML=e+"<h3>"+t.name+"</h3>"),t?.type=="page"&&(document.getElementById("tree").innerHTML=e+'&emsp;<a href="'+t.href+'">'+t.name+"</a><br/>")}return i}